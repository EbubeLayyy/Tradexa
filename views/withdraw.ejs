<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <!-- Link to your custom CSS file -->
    <link rel="stylesheet" href="css/dashboard.css">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <!-- Google Fonts Poppins as specified in your CSS -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <span class="logo-text">Tradexa</span>
                <i class="fas fa-bars logo-toggle-icon"></i> <!-- Hamburger icon for collapsed state -->
            </div>
            <nav>
                <ul>
                    <li class="<%= currentPage === 'dashboard' ? 'active' : '' %>" data-section="dashboard">
                        <a href="/dashboard"><i class="fas fa-home"></i> <span class="nav-text">Dashboard</span></a>
                    </li>
                    <li class="<%= currentPage === 'my-plans' ? 'active' : '' %>" data-section="my-plans">
                        <a href="/my-plans"><i class="fas fa-chart-line"></i> <span class="nav-text">My Plans</span></a>
                    </li>
                    <li class="<%= currentPage === 'deposit' ? 'active' : '' %>" data-section="deposit">
                        <a href="/deposit"><i class="fas fa-arrow-down"></i> <span class="nav-text">Deposit</span></a>
                    </li>
                    <li class="<%= currentPage === 'withdraw' ? 'active' : '' %>" data-section="withdraw">
                        <a href="/withdraw"><i class="fas fa-arrow-up"></i> <span class="nav-text">Withdraw</span></a>
                    </li>
                    <li class="<%= currentPage === 'transactions' ? 'active' : '' %>" data-section="transactions">
                        <a href="/transactions"><i class="fas fa-list"></i> <span class="nav-text">Transactions</span></a>
                    </li>
                    <li class="<%= currentPage === 'profile' ? 'active' : '' %>" data-section="profile">
                        <a href="#"><i class="fas fa-user"></i> <span class="nav-text">Profile</span></a>
                    </li>
                    <li>
                        <a href="/logout"><i class="fas fa-sign-out-alt"></i> <span class="nav-text">Logout</span></a>
                    </li>
                </ul>
            </nav>
        </div>

        <!-- Main Content Area -->
        <div class="main-content">
            <div class="dashboard-header">
                <h1>Withdraw Funds</h1>
                <div class="user-info">
                    <span>Hello, <%= user.fullName %></span>
                    <div class="profile-picture-container">
                        <% if (user.profilePicture) { %>
                            <img src="<%= user.profilePicture %>" alt="Profile Picture" class="profile-image" style="display: block;">
                        <% } else { %>
                            <i class="fas fa-user-circle profile-icon"></i>
                        <% } %>
                    </div>
                </div>
            </div>

            <% if (error) { %>
                <div class="message error" role="alert">
                    <%= error %>
                </div>
            <% } %>
            <% if (success) { %>
                <div class="message success" role="alert">
                    <%= success %>
                </div>
            <% } %>

            <p class="text-gray-600 mb-8">Request a withdrawal from your available balance.</p>

            <div class="stats-cards">
                <!-- Current Balance Card -->
                <div class="card">
                    <h3>Your Current Balance:</h3>
                    <p>$<%= user.balance.toFixed(2) %></p>
                </div>

                <!-- Withdrawable Balance Card -->
                <div class="card">
                    <h3>Available for Withdrawal:</h3>
                    <p>$<%= withdrawableBalance %></p>
                    <p class="text-sm text-gray-500 mt-2">Minimum withdrawal: $<%= minWithdrawal %></p>
                </div>
            </div>

            <!-- Withdrawal Form -->
            <div class="section"> <!-- Using 'section' class for the form card -->
                <h2>Withdrawal Request Form</h2>
                <form id="withdrawForm">
                    <div class="form-group">
                        <label for="amount">Withdrawal Amount (USD)</label>
                        <input type="number" id="amount" name="amount" min="0.01" step="0.01" class="form-input" placeholder="e.g., 500.00" required>
                    </div>
                    <div class="form-group">
                        <label for="currency">Select Cryptocurrency</label>
                        <select id="currency" name="currency" class="form-input" required>
                            <option value="">-- Select --</option>
                            <% for (const key in cryptoWallets) { %>
                                <option value="<%= key %>"><%= key.replace(/_/g, ' ') %></option>
                            <% } %>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="walletAddress">Recipient Wallet Address</label>
                        <input type="text" id="walletAddress" name="walletAddress" class="form-input" placeholder="Enter your wallet address for the selected currency" required>
                    </div>
                    
                    <div class="text-right" style="text-align: right; color: #475569;">
                        <p style="font-size: 15px;">Estimated Network Fee: <span id="networkFee">$0.00</span></p>
                        <p style="font-size: 18px; font-weight: 600;">You will receive: <span id="estimatedReceive">$0.00</span></p>
                    </div>

                    <button type="submit" class="btn-primary">Request Withdrawal</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal for Withdrawal Failed Message -->
    <div id="withdrawalModal" class="modal" style="display: none;"> <!-- Added inline style as a fallback -->
        <div class="modal-content">
            <span class="close-button">&times;</span>
            <h3 style="font-size: 20px; font-weight: bold; color: #d32f2f; margin-bottom: 15px;">Withdrawal Failed!</h3>
            <p style="color: #475569; margin-bottom: 15px;" id="modalMessage">Your withdrawal request could not be processed at this time.</p>
            <p style="color: #475569;">Please contact support for assistance:</p>
            <p style="color: #03598c; font-weight: 600; margin-top: 8px;"><a href="mailto:contact.tradexa@gmail.com">contact.tradexa@gmail.com</a></p> <!-- Corrected mailto link and text -->
            <button class="btn-primary" onclick="closeModal()" style="margin-top: 25px;">Close</button>
        </div>
    </div>

    <script>
        const amountInput = document.getElementById('amount');
        const currencySelect = document.getElementById('currency');
        const walletAddressInput = document.getElementById('walletAddress');
        const networkFeeSpan = document.getElementById('networkFee');
        const estimatedReceiveSpan = document.getElementById('estimatedReceive');
        const withdrawForm = document.getElementById('withdrawForm');
        const withdrawalModal = document.getElementById('withdrawalModal');
        const modalMessage = document.getElementById('modalMessage');
        const closeButton = document.querySelector('.close-button');

        const cryptoWallets = <%- JSON.stringify(cryptoWallets) %>; // Pass cryptoWallets from backend
        const minWithdrawal = parseFloat('<%= minWithdrawal %>'); // Pass minWithdrawal from backend
        const supportEmail = 'contact.tradexa@gmail.com'; // Corrected email address here

        // Function to update estimated receive amount
        function updateEstimatedReceive() {
            const amount = parseFloat(amountInput.value);
            let fee = 0; // For now, let's assume a fixed small fee or 0 for simplicity
            // You can implement dynamic fees here based on currency or amount if needed later.
            // For example: if (currencySelect.value === 'BTC') fee = 0.0005;

            const estimatedReceive = isNaN(amount) ? 0 : amount - fee;
            networkFeeSpan.textContent = `$${fee.toFixed(2)}`;
            estimatedReceiveSpan.textContent = `$${estimatedReceive.toFixed(2)}`;
        }

        // Event listeners for input changes
        amountInput.addEventListener('input', updateEstimatedReceive);
        currencySelect.addEventListener('change', () => {
            const selectedCurrency = currencySelect.value;
            if (selectedCurrency) {
                walletAddressInput.placeholder = `Enter your ${selectedCurrency.replace(/_/g, ' ')} wallet address`;
            } else {
                walletAddressInput.placeholder = `Enter your wallet address for the selected currency`;
            }
            updateEstimatedReceive(); // Recalculate if fees become currency-dependent
        });

        // Initial calculation on page load
        updateEstimatedReceive();

        // Handle form submission
        withdrawForm.addEventListener('submit', async (e) => {
            e.preventDefault(); // Prevent default form submission

            const amount = parseFloat(amountInput.value);
            const currency = currencySelect.value;
            const walletAddress = walletAddressInput.value.trim();

            if (isNaN(amount) || amount <= 0) {
                modalMessage.textContent = 'Please enter a valid withdrawal amount.';
                showModal();
                return;
            }
            if (amount < minWithdrawal) {
                modalMessage.textContent = `Minimum withdrawal amount is $${minWithdrawal.toFixed(2)}.`;
                showModal();
                return;
            }
            // Client-side check against current balance. Note: user.balance is a string from EJS, convert to float.
            if (amount > parseFloat('<%= user.balance.toFixed(2) %>')) {
                modalMessage.textContent = 'Insufficient balance for this withdrawal.';
                showModal();
                return;
            }
            if (!currency) {
                modalMessage.textContent = 'Please select a cryptocurrency.';
                showModal();
                return;
            }
            if (!walletAddress) {
                modalMessage.textContent = `Please enter your ${currency.replace(/_/g, ' ')} wallet address.`;
                showModal();
                return;
            }

            try {
                const response = await fetch('/withdraw', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ amount, currency, walletAddress })
                });

                const data = await response.json();

                if (!data.success) {
                    modalMessage.innerHTML = `${data.message || 'Withdrawal failed. Please try again.'}`; // Use supportEmail variable
                    showModal();
                } else {
                    // This block will not be reached with current server-side logic
                    // In a real scenario, you'd show a success message and potentially clear the form
                    modalMessage.textContent = data.message;
                    showModal();
                    withdrawForm.reset(); // Clear form on success
                    updateEstimatedReceive(); // Reset calculation
                }
            } catch (error) {
               console.error('Error during withdrawal request:', error);
               modalMessage.innerHTML = `An unexpected error occurred. Please contact support at <a href="mailto:${supportEmail}" style="color: #03598c; font-weight: 600;">${supportEmail}</a>`; // Use supportEmail variable
               showModal();
            }
        });

        // Modal functions
        function showModal() {
            withdrawalModal.style.display = 'flex'; // Use flex to center
        }

        function closeModal() {
            withdrawalModal.style.display = 'none';
        }

        closeButton.addEventListener('click', closeModal);
        window.addEventListener('click', (event) => {
            if (event.target === withdrawalModal) {
                closeModal();
            }
        });
    </script>
         <!-- Smartsupp Live Chat script -->
<!-- Smartsupp Live Chat script -->
<script type="text/javascript">
var _smartsupp = _smartsupp || {};
_smartsupp.key = 'ba6a5df2d0615c8a2ce3a85521dc1af4083b028c';
window.smartsupp||(function(d) {
  var s,c,o=smartsupp=function(){ o._.push(arguments)};o._=[];
  s=d.getElementsByTagName('script')[0];c=d.createElement('script');
  c.type='text/javascript';c.charset='utf-8';c.async=true;
  c.src='https://www.smartsuppchat.com/loader.js?';s.parentNode.insertBefore(c,s);
})(document);
</script>
<noscript> Powered by <a href=“https://www.smartsupp.com” target=“_blank”>Smartsupp</a></noscript>
</body>
</html>
